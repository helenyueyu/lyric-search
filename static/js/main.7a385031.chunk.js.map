{"version":3,"sources":["App.js","index.js"],"names":["App","state","artist","song","lyrics","size","setArtist","e","_this","setState","target","value","setSong","onSubmit","preventDefault","fetch","concat","then","data","json","undefined","replace","split","input_one","alert","increaseSize","_this2","this","react_default","a","createElement","className","Form","Field","Input","label","placeholder","onChange","id","ref","input_two","Button","onClick","Container","slice","toUpperCase","filter","x","includes","map","idx","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"mRAiFeA,qNA5EbC,MAAQ,CACNC,OAAQ,KACRC,KAAM,KACNC,OAAQ,KACRC,KAAM,YAGRC,UAAY,SAACC,GACXC,EAAKC,SAAS,CACZP,OAAQK,EAAEG,OAAOC,WAGrBC,QAAU,SAACL,GACTC,EAAKC,SAAS,CACZN,KAAMI,EAAEG,OAAOC,WAGnBE,SAAW,SAACN,GACVA,EAAEO,iBACGN,EAAKP,MAAMC,OAEJM,EAAKP,MAAME,MAGrBY,MAAK,6BAAAC,OAA8BR,EAAKP,MAAMC,OAAzC,KAAAc,OAAmDR,EAAKP,MAAME,OAChEc,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAC,GAAI,YAAqBE,IAAhBF,EAAKd,OAAwBI,EAAKC,SAAS,CACxDL,OAAQ,CAAC,SAAU,kBAChBI,EAAKC,SAAS,CACjBL,OAAQc,EAAKd,OAAOiB,QAAQ,OAAQ,SAASC,MAAM,aAEvDd,EAAKe,UAAUZ,MAAQ,IATvBa,MAAM,uBAFNA,MAAM,4BAcVC,aAAe,WACbjB,EAAKC,SAAS,CACZJ,KAA2B,WAApBG,EAAKP,MAAMI,KAAqB,MAAQ,oFAG1C,IAAAqB,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMnB,SAAUc,KAAKd,SAAUkB,UAAU,QACvCH,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,KACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,MAAM,SAASC,YAAY,0BAA0BC,SAAUV,KAAKrB,UAC3EgC,GAAG,YACHC,IAAK,SAACA,GAAD,OAASb,EAAKH,UAAYgB,MAE/BX,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,KACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,MAAM,OAAOC,YAAY,uBAAuBC,SAAUV,KAAKf,QACtE0B,GAAG,YACHC,IAAK,SAACA,GAAD,OAASb,EAAKc,UAAYD,MAE/BX,EAAAC,EAAAC,cAACW,EAAA,EAAD,eACCd,KAAK1B,MAAMG,QAAUwB,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAASf,KAAKF,cAAkC,WAAlBE,KAAK1B,MAAMI,KAAmB,IAAM,MAIlGuB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAWZ,UAAU,QACrBH,EAAAC,EAAAC,cAAA,UAAKH,KAAK1B,MAAMG,QAAU,SAAYuB,KAAK1B,MAAME,KAAKyC,MAAM,EAAE,GAAGC,cAAgBlB,KAAK1B,MAAME,KAAKyC,MAAM,IAEtGhB,EAAAC,EAAAC,cAAA,UAAKH,KAAK1B,MAAMG,QAAU,WAAcuB,KAAK1B,MAAMC,OAAO0C,MAAM,EAAE,GAAGC,cAAgBlB,KAAK1B,MAAMC,OAAO0C,MAAM,KAK7GhB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAWZ,UAA8B,WAAlBJ,KAAK1B,MAAMI,KAAmB,eAAiB,cACnEsB,KAAK1B,MAAMG,QAAUuB,KAAK1B,MAAMG,OAAO0C,OAAO,SAAAC,GAAC,OAA8B,IAA1BA,EAAEC,SAAS,aAAqBC,IAAI,SAACF,EAAGG,GAAJ,OAAYtB,EAAAC,EAAAC,cAAA,MAAIqB,IAAKD,GAAMH,cArE1GK,qBCClBC,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7a385031.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Button, Container, Label } from 'semantic-ui-react'\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    artist: null,\n    song: null,\n    lyrics: null,\n    size: 'normal'\n  }\n\n  setArtist = (e) => {\n    this.setState({\n      artist: e.target.value\n    })\n  }\n  setSong = (e) => {\n    this.setState({\n      song: e.target.value\n    })\n  }\n  onSubmit = (e) => {\n    e.preventDefault()\n    if (!this.state.artist) {\n      alert('Please provide artist')\n    } else if (!this.state.song) {\n      alert('Please provide song')\n    } else {\n      fetch(`https://api.lyrics.ovh/v1/${this.state.artist}/${this.state.song}`)\n        .then(data => data.json())\n        .then(data => (data.lyrics === undefined) ? this.setState({\n          lyrics: ['Lyrics', 'unavailable.']\n        }) : this.setState({\n          lyrics: data.lyrics.replace(/\\n/ig, '<br/>').split('<br/>')\n      }))\n      this.input_one.value = \"\"\n    }\n  }\n  increaseSize = () => {\n    this.setState({\n      size: (this.state.size === 'normal') ? 'big' : 'normal'\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <h1>Lyric Search</h1>\n      <Form onSubmit={this.onSubmit} className=\"form\">\n        <Form.Field>\n        <Input label=\"Artist\" placeholder=\"search for an artist...\" onChange={this.setArtist}\n        id=\"input_one\"\n        ref={(ref) => this.input_one = ref}/>\n        </Form.Field>\n        <Form.Field>\n        <Input label=\"Song\" placeholder=\"search for a song...\" onChange={this.setSong}\n        id=\"input_two\"\n        ref={(ref) => this.input_two = ref}/>\n        </Form.Field>\n        <Button>Submit</Button>\n        {this.state.lyrics && <Button onClick={this.increaseSize}>{(this.state.size==='normal') ? '+' : '-'}</Button>}\n      </Form>\n\n\n      <Container className=\"mode\">\n      <h2>{this.state.lyrics && 'Song: ' +  this.state.song.slice(0,1).toUpperCase() + this.state.song.slice(1)}</h2>\n\n       <h2>{this.state.lyrics && 'Artist: ' +  this.state.artist.slice(0,1).toUpperCase() + this.state.artist.slice(1)}</h2>\n\n      </Container>\n\n\n       <Container className={(this.state.size==='normal') ? 'lyrics-small' : 'lyrics-big'}>\n         {this.state.lyrics && this.state.lyrics.filter(x => x.includes('chanson') !== true).map((x, idx) => <li key={idx}>{x}</li>)}\n       </Container>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}